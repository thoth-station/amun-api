openapi: "3.0.0"
info:
  title: Amun API
  version: "0.5.0"
servers:
  - url: "/api/v1/"
paths:
  /_debug/generate-dockerfile:
    post:
      tags: ["Debug"]
      x-openapi-router-controller: amun.api_v1
      operationId: post_generate_dockerfile
      summary: >
        Generate Dockerfile as it would be generated internally for inspections.
      requestBody:
        required: true
        description: Specification of the software stack that should be created and verified.
        content:
          application/json:
            schema:
              x-body-name: specification
              $ref: "#/components/schemas/InspectionSpecification"
      responses:
        202:
          description: Successful response with inspection id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionGenerateDockerfileResponse"
        400:
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
  /inspect:
    post:
      tags: ["Inspection"]
      x-openapi-router-controller: amun.api_v1
      operationId: post_inspection
      summary: Inspect the given application stack.
      requestBody:
        required: true
        description: Specification of the software stack that should be created and verified.
        content:
          application/json:
            schema:
              x-body-name: specification
              $ref: "#/components/schemas/InspectionSpecification"
      responses:
        202:
          description: Successful response with inspection id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponse"
        400:
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
  /inspect/{inspection_id}/build/log:
    get:
      tags: ["Inspection"]
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_build_log
      summary: Get log for a specific inspection build.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection build.
          schema:
            type: string
      responses:
        200:
          description: Successful response with inspection build log.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionBuildLogResponse"
        400:
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
        404:
          description: The given inspection build referenced by inspection id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
  /inspect/{inspection_id}/job/log:
    get:
      tags: ["Inspection"]
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_job_log
      summary: Get log for a specific inspection run.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
      responses:
        200:
          description: Successful response with inspection run log.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionJobLogResponse"
        202:
          description: The inspection job was not scheduled yet, check back later.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
        400:
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
        404:
          description: The given inspection job referenced by inspection id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
  /inspect/{inspection_id}/status:
    get:
      tags: ["Inspection"]
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_status
      summary: Get status of an inspection.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
      responses:
        200:
          description: Successful response with inspection status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionStatusResponse"
        400:
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
        404:
          description: The given inspection with provided id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
  /inspect/{inspection_id}/specification:
    get:
      tags: ["Inspection"]
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_specification
      summary: Get specification of the given inspection.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
      responses:
        200:
          description: Successful response with inspection specification.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionSpecificationResponse"
        400:
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
        404:
          description: The given inspection with provided id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectionResponseError"
components:
  schemas:
    InspectionResponseError:
      type: object
      required:
        - error
        - parameters
      properties:
        error:
          type: string
          description: Error information for user.
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionBuildLogResponse:
      type: object
      description: Build logs for the given inspection.
      required:
        - log
        - parameters
      properties:
        log:
          type: string
          description: Inspection job logs printed to stdout/stderr as a plain text.
          nullable: true
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionSpecification:
      type: object
      description: Specification of software stack for inspection.
      required:
        - base
      properties:
        base:
          type: string
          minLength: 1
          description: Base image on which the runtime environment should be based on.
          example: "fedora:28"
        update:
          type: boolean
          description: Perform native packages update.
        packages:
          type: array
          description: A list of native packages that should be installed into the runtime environment.
          items:
            type: string
            description: Name of the package to be installed.
            example: "vim"
        python_packages:
          type: array
          description: A list of python packages that should be installed into the runtime environment.
          items:
            type: string
            description: Name of the package to be installed.
            example: "pipenv"
        python:
          type: object
          description: Python application stack to be installed.
          additionalProperties: false
          required:
            - requirements
            - requirements_locked
            - runtime_environment
          properties:
            requirements:
              type: object
              description: Pipfile stating software stack (direct dependencies) of an application.
              additionalProperties: true
            requirements_locked:
              type: object
              description: Pipfile.lock with fully pinned down and resolved software stack.
              additionalProperties: true
            runtime_environment:
              $ref: "#/components/schemas/RuntimeEnvironment"
        identifier:
          type: string
          description:
            A user-created string which will be inserted into the inspection id to distinguish
            different inspection runs.
          example: "test"
        build:
          type: object
          description: Hardware requirements for build time.
          additionalProperties: false
          properties:
            requests:
              type: object
              description: Requested hardware environment at build time.
              properties:
                cpu:
                  type: string
                  minLength: 1
                  description: CPU cores requested at build time.
                  example: "1"
                memory:
                  type: string
                  minLength: 1
                  description: CPU Memory requested at build time.
                  example: 1Gi
                hardware:
                  type: object
                  description: Set hardware requirements for build time.
                  required:
                    - cpu_family
                    - cpu_model
                    - processor
                  properties:
                    cpu_family:
                      type: integer
                      description: CPU family number from CPU proc info.
                      example: 6
                    cpu_model:
                      type: integer
                      description: Model number of CPU from CPU proc info.
                      example: 94
                    physical_cpus:
                      type: integer
                      description: Number of physical CPUs.
                      example: 32
                    processor:
                      type: string
                      description: Name of the CPU model name of CPU proc info.
                      example: "Intel-Xeon-Processor-Skylake-IBRS"
        run:
          type: object
          description: Hardware requirements for run time
          additionalProperties: false
          properties:
            requests:
              type: object
              description: Requested hardware environment for run time
              additionalProperties: false
              properties:
                cpu:
                  type: string
                  minLength: 1
                  description: CPU cores requested at run time
                  example: "1"
                memory:
                  type: string
                  minLength: 1
                  description: CPU Memory requested at run time
                  example: 512Mi
                hardware:
                  type: object
                  description: Set hardware requirements for run time.
                  required:
                    - cpu_family
                    - cpu_model
                    - processor
                  properties:
                    cpu_family:
                      type: integer
                      description: CPU family number from CPU proc info.
                      example: 6
                    cpu_model:
                      type: integer
                      description: Model number of CPU from CPU proc info.
                      example: 94
                    physical_cpus:
                      type: integer
                      description: Number of physical CPUs.
                      example: 32
                    processor:
                      type: string
                      description: Name of the CPU model name of CPU proc info.
                      example: "Intel-Xeon-Processor-Skylake-IBRS"
        files:
          type: array
          description: Files passed to the context.
          items:
            type: object
            additionalProperties: false
            required:
              - content
              - path
            properties:
              path:
                type: string
                minLength: 1
                description: Name of the file including an absolute path (relative will be taken from root).
              content:
                type: string
                minLength: 1
                description: A string holding actual content of the file.
        environment:
          type: array
          description: Environment variables supplied into the build process.
          items:
            type: object
            additionalProperties: false
            required:
              - name
              - value
            properties:
              name:
                type: string
                minLength: 1
                description: Name of the environment variable.
              value:
                type: string
                description: Value for the environment variable.
        script:
          type: string
          description: A script that should be executed in inspection run.
          example: |
            #!/usr/bin/bash
            echo "Here should be run tests..."
    InspectionGenerateDockerfileResponse:
      type: object
      description: Response for a generated Dockerfile.
      additionalProperties: false
      properties:
        dockerfile:
          type: string
          description: Generated Dockerfile as a string.
        parameters:
          type: object
          description: >
            Parameters echoed back to user (with default parameters if omitted).
      required:
        - dockerfile
        - parameters
    InspectionResponse:
      type: object
      description: Response for a submitted inspection.
      additionalProperties: false
      properties:
        inspection_id:
          type: string
          description: >
            An id of submitted inspection for checking its status and its results.
          example: "inspect-ABCXYZ"
        parameters:
          type: object
          description: >
            Parameters echoed back to user (with default parameters if omitted).
        build_created:
          type: boolean
          description: True if the build was scheduled for the given.
        job_created:
          type: boolean
          description: >
            True if there was created a job executing script for the given inspection.
      required:
        - inspection_id
        - parameters
        - job_created
        - build_created
    RuntimeEnvironment:
      type: object
      description: Runtime environment information.
      properties:
        cuda_version:
          type: string
          description: CUDA version installed.
          nullable: true
        hardware:
          type: object
          description: Hardware information.
          properties:
            cpu_family:
              type: integer
            cpu_model:
              type: integer
        operating_system:
          type: object
          description: OS information.
          properties:
            name:
              type: string
            version:
              type: string
        python_version:
          type: string
          description: Python interpreter version.
    InspectionJobLogResponse:
      type: object
      description: Job logs for the given inspection.
      required:
        - log
        - parameters
      properties:
        log:
          type: object
          description: Inspection job logs printed to stdout/stderr as a plain text.
          nullable: true
          additionalProperties: false
          required:
            - exit_code
            - hwinfo
            - script_sha256
            - stderr
            - stdout
            - usage
            - os_release
            - runtime_environment
          properties:
            exit_code:
              type: integer
              description: Exit code of user provided script (matches exit code of the inspect job)
              example: 0
            hwinfo:
              type: object
              additionalProperties: true
              description: Hardware information as provided by Amun's hwinfo.
            script_sha256:
              type: string
              description: SHA 256 digest of user provided script
            stderr:
              type: string
              description: Standard error output produced by user provided script.
            stdout:
              type: object
              description: Standard output prodiced by user provided script.
              additionalProperties: true
            usage:
              type: object
              description: >
                Utilization of resources such as user-space or kernel-space CPU time, context
                switches, shared memory size or page faults (and others).
              additionalProperties: true
            os_release:
              type: object
              description: Information about operating system as gathered from /etc/os-release
              additionalProperties: true
              nullable: true
              properties:
                ansi_color:
                  type: string
                  example: "0;34"
                bug_report_url:
                  type: string
                  example: "https://bugzilla.redhat.com/"
                cpe_name:
                  type: string
                  example: "cpe:/o:fedoraproject:fedora:29"
                documentation_url:
                  type: string
                  example: "https://docs.fedoraproject.org/en-US/fedora/f29/system-administrators-guide/"
                home_url:
                  type: string
                  example: "https://fedoraproject.org/"
                id:
                  type: string
                  example: "fedora"
                logo:
                  type: string
                name:
                  type: string
                  example: "Fedora"
                platform_id:
                  type: string
                  example: "platform:f29"
                pretty_name:
                  type: string
                  example: "Fedora 29 (Workstation Edition)"
                privacy_policy_url:
                  type: string
                  example: "https://fedoraproject.org/wiki/Legal:PrivacyPolicy"
                redhat_bugzilla_product:
                  type: string
                  example: "Fedora"
                redhat_bugzilla_product_version:
                  type: string
                  example: "29"
                redhat_support_product:
                  type: string
                  example: "Fedora"
                redhat_support_product_version:
                  type: string
                  example: "29"
                support_url:
                  type: string
                  example: "https://fedoraproject.org/wiki/Communicating_and_getting_help"
                variant:
                  type: string
                  example: "Workstation Edition"
                variant_id:
                  type: string
                  example: "workstation"
                version:
                  type: string
                  example: "29 (Workstation Edition)"
                version_codename:
                  type: string
                version_id:
                  type: string
                  example: "29"
            runtime_environment:
              $ref: "#/components/schemas/RuntimeEnvironment"
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionSpecificationResponse:
      type: object
      description: Response for an inspection for the given inspection.
      additionalProperties: true
      required:
        - parameters
        - specification
        - created
      properties:
        parameters:
          type: object
          description: >
            Parameters echoed back to user (with default parameters if omitted).
        specification:
          $ref: "#/components/schemas/InspectionSpecification"
        created:
          type: string
          description: Creation time of an inspection run.
          example: "2019-04-17T06:39:30.459116"
    InspectionResultResponse:
      type: object
      additionalProperties: false
      description: Result of an inspection
      required:
        - metadata
        - result
      properties:
        metadata:
          type: object
          description: Metadata for inspection run.
          additionalProperties: false
          required:
            - analyzer
            - analyzer_version
            - arguments
            - datetime
            - distribution
            - hostname
            - python
          properties:
            analyzer:
              type: string
              description: Analyzer name which handled inspection.
            analyzer_version:
              type: string
              description: Version of analyzer handling inspection.
            arguments:
              type: object
              additionalProperties: true
              description: Arguments passed to analyzer.
            datetime:
              type: string
              description: Date and time of inspection end in ISO format.
            distribution:
              type: object
              description: >
                Information about environment in which the inspection
                was performed.
              required:
                - codename
                - id
                - like
                - version
                - version_parts
              properties:
                codename:
                  type: string
                  description: >
                    Codename of environment in which the inspection was perfomed.
                id:
                  type: string
                  description: >
                    Identifier of environment in which the inspection
                    was perfomed.
                like:
                  type: string
                  description: >
                    Similar environments in comparision to environment in
                    which the inspection was perfomed.
                version:
                  type: string
                  description: A string representation of environment version.
                version_parts:
                  type: object
                  description: >
                    Parts of version identifier of the analysing environment.
                  properties:
                    build_number:
                      type: string
                    major:
                      type: string
                    minor:
                      type: string
                  additionalProperties: false
                  required:
                    - build_number
                    - major
                    - minor
            hostname:
              type: string
              description: Pod name where the inspection was done.
            python:
              required:
                - api_version
                - implementation_name
                - major
                - minor
                - micro
                - releaselevel
                - serial
              properties:
                api_version:
                  type: integer
                implementation_name:
                  type: string
                  example: cpython
                major:
                  type: integer
                micro:
                  type: integer
                minor:
                  type: integer
                releaselevel:
                  type: string
                  example: final
                serial:
                  type: integer
        result:
          type: object
          additionalProperties: true
          description: Actual result of an inspection run.
    InspectionStatusResponse:
      type: object
      description: Status about the current job run of inspection.
      additionalProperties: false
      required:
        - parameters
        - build
        - job
      properties:
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
          additionalProperties: true
        build:
          type: object
          description: Status information for the inspection build.
          additionalProperties: false
          required:
            - container
            - exit_code
            - finished_at
            - reason
            - started_at
            - state
          properties:
            container:
              type: string
              description: SHA of container image in which the inspection is done.
              nullable: true
            exit_code:
              type: integer
              description: >
                Return code of the process perfoming inspection (user supplied
                script return value).
              nullable: true
            finished_at:
              type: string
              description: >
                Datetime in ISO format informing about when the inspection
                has finished.
              nullable: true
            reason:
              type: string
              description: Reasoning on finished inspection run.
              nullable: true
            started_at:
              type: string
              description: >
                Datetime in ISO format informing about when the inspection
                has started.
            state:
              type: string
              example: terminated
        job:
          type: object
          description: Status information for the inspection job.
          additionalProperties: false
          required:
            - container
            - exit_code
            - finished_at
            - reason
            - started_at
            - state
          properties:
            container:
              type: string
              description: SHA of container image in which the inspection is done.
              nullable: true
            exit_code:
              type: integer
              description: >
                Return code of the process performing inspection (user supplied
                script return value).
              nullable: true
            finished_at:
              type: string
              description: >
                Datetime in ISO format informing about when the inspection
                has finished.
              nullable: true
            reason:
              type: string
              description: Reasoning on finished inspection run.
              nullable: true
            started_at:
              type: string
              description: >
                Datetime in ISO format informing about when the inspection
                has started.
            state:
              type: string
              example: terminated
